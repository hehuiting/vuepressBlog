{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{208:function(e,t,a){\"use strict\";a.r(t);var n=a(0),s=Object(n.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":e.$parent.slotKey}},[a(\"h2\",{attrs:{id:\"ajax-异步加载方法使用\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#ajax-异步加载方法使用\"}},[e._v(\"#\")]),e._v(\" Ajax 异步加载方法使用\")]),e._v(\" \"),a(\"h4\",{attrs:{id:\"_1、技术核心：\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1、技术核心：\"}},[e._v(\"#\")]),e._v(\" 1、技术核心：\")]),e._v(\" \"),a(\"blockquote\",[a(\"p\",[e._v(\"XMLHttpRequest（XHR）对象\")])]),e._v(\" \"),a(\"p\",[e._v(\"该对象实现了无需刷新页面即可从服务器获得数据。\")]),e._v(\" \"),a(\"h4\",{attrs:{id:\"_2、xhr-的用法\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2、xhr-的用法\"}},[e._v(\"#\")]),e._v(\" 2、XHR 的用法\")]),e._v(\" \"),a(\"ul\",[a(\"li\",[a(\"p\",[e._v(\"使用 XHR 时要调用的第一个方法是 open()\")]),e._v(\" \"),a(\"blockquote\",[a(\"p\",[a(\"code\",[e._v('xhr.open(\"GET\",\"example.json\",false)')])])]),e._v(\" \"),a(\"blockquote\",[a(\"p\",[a(\"code\",[e._v(\"xhr.send(null)\")])])]),e._v(\" \"),a(\"p\",[e._v(\"其中第一个参数为数据获取的方法，可以为 GET 或 POST，第二个参数是请求的数据，第三个参数表示的是是否启动请求，默认为 false。\")]),e._v(\" \"),a(\"blockquote\",[a(\"p\",[e._v(\"**注：**只能向同一个域中使用相同的端口和协议的 URL 发送请求，若 URL 与气动请求的页面有任何差别，都会引发安全错误。如果不需要通过请求主体发送数据，则必须传入 null。\")])])]),e._v(\" \"),a(\"li\",[a(\"p\",[e._v(\"XHR 的相关属性\")]),e._v(\" \"),a(\"blockquote\",[a(\"p\",[e._v(\"responseText：作为响应主体返回的文本。\")])]),e._v(\" \"),a(\"blockquote\",[a(\"p\",[e._v(\"responseXML：若响应内容类型是“text/xml”或“application/xml”，那么这个属性中将保存包含这响应数据的 XML DOM 文档。\")])]),e._v(\" \"),a(\"blockquote\",[a(\"p\",[e._v(\"status：响应的 HTTP 状态。\")])]),e._v(\" \"),a(\"blockquote\",[a(\"p\",[e._v(\"statusText：HTTP 状态说明。\")])]),e._v(\" \"),a(\"blockquote\",[a(\"p\",[e._v(\"readyState：请求状态，多数情况下发布异步请求，则检测该值。\")])]),e._v(\" \"),a(\"pre\",[a(\"code\",[e._v(\"  readyState的值可能为以下几种情况：\\n      0：未初始化。表示尚未调用open()方法。\\n      1：启动。已经调用open()，但尚未调用send()方法。\\n      2：发送。已经调用send()方法，但尚未接受响应。\\n      3：接收。已接收部分响应数据，但尚未接受响应。\\n      4：完成。已接收全部数据，且可在客户端使用。\\n\")])]),e._v(\" \"),a(\"p\",[e._v(\"**注：**readyState 每次改变都会触发 readystatechange 事件，且必须在调用 open()方法前制定 onreadystatechange 事件才能确保跨浏览器的兼容性。\")])])]),e._v(\" \"),a(\"p\",[e._v(\"例子如下：\")]),e._v(\" \"),a(\"pre\",[a(\"code\",[e._v(\"var xhr=new XMLHttpRequest();\\nxhr.onreadystatechange=function(){\\n    if(xhr.readyState==4&&xhr.status==200){\\n        alert(xhr.rsponseText);\\n      }\\n    else{\\n        alert(\\\"请求失败：\\\"+xhr.status);\\n    }\\n};\\nxhr.open('GET','example.json',true);\\nxhr.send(null);\\n\")])])])}),[],!1,null,null,null);t.default=s.exports}}]);","extractedComments":[]}